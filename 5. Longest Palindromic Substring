/*
5. Longest Palindromic Substring

Given a string s, return the longest palindromic substring in s.

 

Example 1:

Input: s = "babad"
Output: "bab"
Explanation: "aba" is also a valid answer.

Example 2:

Input: s = "cbbd"
Output: "bb"
 

Constraints:

1 <= s.length <= 1000
s consist of only digits and English letters.*/


class Solution {
public:

    string longestPalindrome(string s) {
        int start=0,length=1;                           //to store start and length of ans string

        for(int i=0;i<s.size();i++)                     //we iterate through characters of the string
        {
            int j=i-1,k=i+1;                        //we expand through the middle,here ans string has odd length
            while(j>=0&&k<s.size()&&s[j]==s[k])
            {
                if(k-j+1>length)                    //if length of current palindrome exceeds length,we assign values to start and length
                {
                    start=j;length=k-j+1;
                }
                j--;k++;
            }

            j=i;k=i+1;                              //we expand through the middle,here ans string has even length
            while(j>=0&&k<s.size()&&s[j]==s[k])
            {
                if(k-j+1>length)                //if length of current palindrome exceeds length,we assign values to start and length
                {
                    start=j;length=k-j+1;
                }
                j--;k++;
            }
        }

        return s.substr(start,length);          //we return substring of s using start and length
    }
};
