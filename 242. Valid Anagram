/*
242. Valid Anagram

Given two strings s and t, return true if t is an anagram of s, and false otherwise.*/
 

/*Example 1:
Input: s = "anagram", t = "nagaram"

Output: true

Example 2:
Input: s = "rat", t = "car"

Output: false*/
 

/*Constraints:
1 <= s.length, t.length <= 5 * 104
s and t consist of lowercase English letters.
 

Follow up: What if the inputs contain Unicode characters? How would you adapt your solution to such a case?
*/

class Solution {
public:
    bool isAnagram(string s, string t) {
        if(s.size()!=t.size()) return false; //if length of both strings aren't equal, they can't be anagrams

        unordered_map<wchar_t,int> hashmap;     //wchar_t to accomodate unicode characters and hashmap to maintain frequency of characters

        for(auto c:s)           
        hashmap[c]++;   

        for(auto c:t)
        {
            if(hashmap.find(c)==hashmap.end()) return false;    // if character doesn't exist in hashmap return false
            else
            {
                hashmap[c]--;
                if(hashmap[c]==0)
                hashmap.erase(c);
            }
        }

        if(hashmap.size()==0) return true;
        else return false;
    }
};
