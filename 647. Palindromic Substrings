/*
647. Palindromic Substrings

Given a string s, return the number of palindromic substrings in it.

A string is a palindrome when it reads the same backward as forward.

A substring is a contiguous sequence of characters within the string.

 

Example 1:

Input: s = "abc"
Output: 3
Explanation: Three palindromic strings: "a", "b", "c".

Example 2:

Input: s = "aaa"
Output: 6
Explanation: Six palindromic strings: "a", "a", "a", "aa", "aa", "aaa".
 

Constraints:

1 <= s.length <= 1000
s consists of lowercase English letters.*/


class Solution {
public:
    int countSubstrings(string s) {
        int ans=0;                                              //to store no. of palindromes    

        for(int start=0;start<s.size();start++)             //we iterate through characters of the string
        {            
                int st=start,en=start;                      //we expand through middle for strings of odd length checking if they are palindromes on the go
                while(st>=0&&en<s.size()&&s[st]==s[en])
                {
                    ans++;
                    st--;
                    en++;
                }
                st=start,en=start+1;                    //we expand through middle for strings of even length checking if they are palindromes on the go
                while(st>=0&&en<s.size()&&s[st]==s[en])
                {
                    ans++;
                    st--;
                    en++;
                }            
        }

        return ans;
    }
};
