/*
659 Â· Encode and Decode Strings on LintCode

Design an algorithm to encode a list of strings to a string. The encoded string is then sent over the network and is decoded back to the original list of strings.

Please implement encode and decode

Input: ["lint","code","love","you"]
Output: ["lint","code","love","you"]
Explanation:
One possible encode method is: "lint:;code:;love:;you"

Input: ["we", "say", ":", "yes"]
Output: ["we", "say", ":", "yes"]
Explanation:
One possible encode method is: "we:;say:;:::;yes"
*/


class Solution {
public:
    
    string encode(vector<string> &strs) {
        
        string ans="";
        for(auto s:strs)
        {
            ans+=(to_string(s.size()));     //for every string, concatenate the size of string, then "!@" and then the string. the special characters separate the size and original string, helping up in parsing
            ans+="!@";
            ans+=s;
        }
        return ans;
    }

    
    vector<string> decode(string &str) {
        
        vector<string> ans;
        while(str.find("!@")!=string::npos)
        {
            int index=str.find("!@");           //we find index of "!@"
            int sz=stoi(str.substr(0,index));       //from that index f, we extract size of next string
            ans.push_back(str.substr(index+2,sz));      //we push the string into ans vector
            str=str.substr(index+2+sz);             //we delete out the current string along with its size and "!@" from str so that we can work with the next string int the next iteration of the loop
        }
        return ans;
    }
};
