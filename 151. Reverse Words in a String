/*
151. Reverse Words in a String

Given an input string s, reverse the order of the words.

A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.

Return a string of the words in reverse order concatenated by a single space.

Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.

 

Example 1:

Input: s = "the sky is blue"
Output: "blue is sky the"

Example 2:

Input: s = "  hello world  "
Output: "world hello"
Explanation: Your reversed string should not contain leading or trailing spaces.

Example 3:

Input: s = "a good   example"
Output: "example good a"
Explanation: You need to reduce multiple spaces between two words to a single space in the reversed string.
 

Constraints:

1 <= s.length <= 104
s contains English letters (upper-case and lower-case), digits, and spaces ' '.
There is at least one word in s.
 

Follow-up: If the string data type is mutable in your language, can you solve it in-place with O(1) extra space?*/

class Solution {
public:
    string reverseWords(string s) {
        //first we remove trim s by removing extra spaces from end,start and in-between

        while((int)s.size()>0 && s.back()==' ') //remove extra spaces from end
        s.pop_back();

        int f=s.find("  ");             //remove extra spaces from in-between
        while(f!=string::npos)
        {
            s.replace(f,2,1,' ');
            f=s.find("  ");
        }

        reverse(s.begin(),s.end());             //remove extra spaces from beginning by reversing s

        while((int)s.size()>0&&s.back()==' ')
        s.pop_back();

        //since whole s is reverse,what we do now,is reverse individual words to get desired result
        int start=0;
        for(int i=0;i<s.size();i++)
        {
            if(s[i]==' '||i==s.size()-1)
            {
                if(s[i]==' ')
                reverse(s.begin()+start,s.begin()+i);
                else
                reverse(s.begin()+start,s.end());
                
                start=i+1;
            }
        }
        return s;
    }
};
