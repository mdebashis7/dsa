/*
920 Â· Meeting Rooms on LintCode

Given an array of meeting time intervals consisting of start and end times [(s1,e1),(s2,e2),...] (si < ei), determine if a person could attend all meetings.

Example1

Input: intervals = [(0,30),(5,10),(15,20)]
Output: false
Explanation: 
(0,30), (5,10) and (0,30),(15,20) will conflict
Example2

Input: intervals = [(5,8),(9,15)]
Output: true
Explanation: 
Two times will not conflict */



/**
 * Definition of Interval:
 * class Interval {
 * public:
 *     int start, end;
 *     Interval(int start, int end) {
 *         this->start = start;
 *         this->end = end;
 *     }
 * }
 */

class Solution {
public:
    static bool comp(Interval& a,Interval& b)       //custom comparison function
    {
        if(a.start!=b.start)
        return a.start<b.start;

        else return a.end<b.end;
    }
    bool canAttendMeetings(vector<Interval> &intervals) {
        sort(intervals.begin(),intervals.end(),comp);       //we sort intervals as per start and end times
        
        for(int i=1;i<intervals.size();i++)                 //if intervals overlap,we return false
            if(intervals[i-1].end>intervals[i].start)
                return false;

        return true;
    }
};
